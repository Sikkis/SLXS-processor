SLXS Language Definition (Regular Expressions) for assembler:

SLXS language is contains 3 types
1. variables
2. instructions
3. comments

Some notes:
  - Whitespaces and tabs can be used in the assembler but they are removed
  - Numbers are of 16 bit length.

--------------------------------------------------------------------------------
1. Variables: [ %s : var ]
  Regular Expression:
  ([A..Z][a..z])+ ([A..Z][a..z][0..9])* {:} ([0..9]+|({0x}|{0X})[0..9]*[A..F]*[a..f]*){$}

  For system variables "_" is added in the start:
  {_}([A..Z][a..z])+ ([A..Z][a..z][0..9])* {:} ([0..9]+|({0x}|{0X})[0..9]*[A..F]*[a..f]*){$}

  Examples:
    Z:0
    temp1:0xaB
    _zero: 0

--------------------------------------------------------------------------------
2. Instructions: 4 types: Each instruction separates variables with "," and it ends with ";"

  var = {_}*([A..Z][a..z])+ ([A..Z][a..z][0..9])*

  a.Simple
    Simple instruction has 3 variables.
    Regular Expression:
    var{,}var{,}var{;}

  b.Jumps
    The 4th var is the address that we want to jump to
    var{,}var{,}var{,}var{;}

  c.Functions
    var{:}var{,}var{,}var{;}

  d. Functions with jump
    var{:}var{,}var{,}var{,}var{;}

--------------------------------------------------------------------------------
3. Comments: Two types:
  Whole line:
  {\\}[^]*$
  Example:
  \\ im a commment

  Boxed:
  {/*} [^]* {*/}
  Example:
  S :/* i am a comment */ 10
--------------------------------------------------------------------------------
Micro Assembler initialized variables and instructions
Variables:
_zero:0 on address 0004
The _zero variable is initialize by the micro assembler. It is used to the following

Instructions:
_zero,_zero,_zero,main;
This is the first line of code on each program when it translates and it jumps to
the main function. The programer doesnt need to write it. When he wants to declare
the function main the micro assembler will fill the line with the address of the main.

loop: _zero,_zero,_zero,loop;
This instruction indicates the end of the program. The programer doesnt need to write it
also. It is needed so the slxs simulator knows when to stop.
--------------------------------------------------------------------------------
Code example:

Z   : 0 //asdf
mxr : 0 //ad
One : 1
/*asdf*/ x    : 10
y   : 11
my  :  50
main: res,res,x; /*asdfsafd*/
y ,my , Z;
xor : 0Xa
res : 0x0
my,res, Z;
xor,xor,x;
Z ,xor , y;
mxr, res,Z;

Result:
0000 00004 00004 00004 00010
0004 00000 00000 00000 00001
0008 0000a 0000b 00032 0000a
000c 00000 00000 00000 00000
0010 0000c 0000c 00008 00014
0014 00009 0000a 00005 00018
0018 0000a 0000c 00005 0001c
001c 0000b 0000b 00008 00020
0020 00005 0000b 00009 00024
0024 00004 00004 00004 00024
--------------------------------------------------------------------------------
